'''
	Python3 内存管理
	1. 引用
	2. 垃圾回收
'''

# 1. 引用
a = 10 		# a 就是引用, 10 就是对象
			# a引用了 对象10
print(a)



b = 10
print(id(a))
print(id(b))
# 分析: b引用了 对象10, 那么此时a引用了 对象10
# 结果: a 和 b  引用了 同一个对象10
# 
# 小结: 当多个引用 指向同一个对象时, 即为指向同一个内存


a = 20
print(a, b)
print(id(a))
print(id(b))
# 重点: 当多个引用 指向一个对象时, 突然有一个引用改变了值, 那么不会改变原有对象, 只会生成一个新内存



# 2. 垃圾回收机制
# 	当对象没有人 指向时, 没有人引用时.
# 	
# 	一旦对象引用数量为0 时, 那么该对象就可以当垃圾回收, 也就意味着没有内存


