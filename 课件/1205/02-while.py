'''
	循环结构
		1. while
		2. for
'''

# 循环:
# 	作用: 将某一部分的代码功能, 重复的执行, 直到不满足某些条件时, 终止循环
#  	好处: 偷懒, 减少代码量


# 1. while格式
# 	while 1.条件:
# 		2.true环境 (代码块)
# 	
# 	3. 循环外的代码
# 		
# 	条件成立, 则进入true环境
# 	条件不成立, 则结束循环, 准备执行while外面的代码
# 	
# 	
# 	执行顺序:
# 		1 2 1 2 12 12 12 12 12 12 
# 		条件1 成立, 则进入2
# 		直到1 不成立, 则进入3

print('老王 和 老李 两人携手做一件惊天地泣鬼神大事情')
print('老王和老李 么么哒1次')
print('老王和老李 么么哒2次')
print('老王和老李 么么哒3次')
print('老王和老李 么么哒4次')
print('老王和老李 么么哒5次')
print('老王和老李 么么哒6次')

print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')


# 1. 循环1
num = 1
while num < 7:
	print('老王和老李 么么哒 %d 次' % num )
	num += 1

print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')



# 循环2:
# 	while 条件: true环境 		仅适合简单功能
# 	
# 	一条命令独占一行, 一般不允许同在一行
# 	若强制同在一行, 每条命令之间用 分号 隔开

num = 1
while num < 10: print(num); num += 1

print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')


# 循环3:
# 	死循环, 无限循环:  条件永远成立  例如True, 1 ...
# 	
# 	在未来实时请求时, 非常有用
# 	例如: 游戏人物对话, 按回车才能进行下一步
# 	例如: 循环次数不确定时, 当满足某些指定条件时, 在循环中通过一些特殊手段来终止循环

# while True:
# 	print('123')


# 循环4:
# 	while ①条件:
# 		②true环境 (代码块)
# 	else: 
# 		③false环境 (代码块)
# 	
# 		
# 	执行顺序:
# 		条件① 成立: 则执行 ②
# 		条件① 不成立: 则执行 ③

age = 10
while age < 18:
	print('现在才 %d 岁, 还不能谈恋爱' % age )
	age += 1
else:
	print('终于 %d 岁, 可以开始浪了' % age )




