'''
	闭包函数
	1. 定义
	2. 使用方式
	3. 作用
	4. 注意事项
'''

# 1. 定义
# 	函数A 里面定义了一个新的函数B
# 	函数B 使用函数A的变量
# 	
# 	只要满足以上两个条件, 函数B就是一个闭包函数

def A():
	a = 10
	def B():
		print(a) 	# 使用函数A的变量, 那么此时函数B, 就成为了 闭包函数

# 通俗说法: 函数A 常被称之为: 外部函数
# 		   函数B 常被称之为: 内部函数
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')


# 2. 闭包的两种使用方式:
# 	2.1 直接调用
# 	2.2 返回函数名


# 2.1 直接调用
def A():
	a = 10
	def B():	
		b = 20
		b += a
		print(b)

	B() 	# 直接调用
A()
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')


def A():
	a = 10

	def  B():
		b = 20
		b += a
		print(b)

	return B 	# 返回的是 函数B

result = A() 	# result = 函数B
result() 	

# 分析:
# 	当执行完53行, 到54行时, A() 已经执行完毕了.
# 		由于返回的是函数, 导致了函数B内的变量, 依旧占用内存
# 		默认情况下, 一个函数结束时, 函数内的变量应该是 全部释放(删除)



# 3. 作用
# 	优点: 数据的持久化
# 	缺点: 因为持久化, 没哟及时释放内存, 所以一直占用内存, 浪费了性能


# 4. 注意点
# 	闭包函数不能直接修改外部函数的变量









