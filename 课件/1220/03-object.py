'''
	对象
'''


# 1. 对象
# 	1.1 单独的类只是抽象的, 只有实例化之后, 才能真正的使用
# 	
# 	1.2 创建一个对象  (实例化)
# 		对象名 = 类名()
# 	
# 	1.3 使用属性
# 		对象名.属性名
# 	
# 	1.4 使用方法
# 		对象名.方法名()
# 	
# 	1.5 self
# 		self : 当前对象
# 		别名 : 伪对象
# 		限制 : 只能在类内使用
# 		注意 : self不是关键字, self用其他单词来代替, 并非固定词 ( 用self来表达, 习惯, 不成文的规定)
# 			   普通方法中, 必须带有self参数, 必须是第一个
# 	
# 		小结:
# 			在类内, 靠 self 使用属性/方法
# 			在类外, 靠 对象 使用属性/方法
# 			
# 			属性和方法 都是依托对象而存在的
# 

class Plane():
	name = '波音777'
	age = 18

	def fly(self):
		print('I can fly')

	def test(self):
		print(self) 	# 就是 plane object,   就是对象 a
		print(self.name)
		print(self.age)
		self.fly()


a = Plane() 	# Plane() 返回一个对象
print(a)		# 0x??????? 	默认以十六进制 来表达内存地址
print(id(a)) 	# 以十进制 表达内存地址,  与十六进制 等价的
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')


# 1.3 使用属性
print(a.name)
print(a.age)


# 1.4 使用方法
a.fly()
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')


# 1.5 self
a.test()
# self.fly()
print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')



# 问题:
# 	请问下面的 对象a 和对象b 是公用同一个存在吗
# 	
# 答案:
# 	不是公用同一个内存
# 	
# 	对象每实例化一次, 就会生成一个独立的内存
# 
# 分析:
# 	假设对象a 就是波音1号
# 	假设对象b 就是波音2号
# 	
# 	虽然两家飞机用的是同一个图纸, 但是打造出来后, 实际是两架飞机(功能一样, 但占地不一样)

a = Plane()
b = Plane()

print(id(a))
print(id(b))



